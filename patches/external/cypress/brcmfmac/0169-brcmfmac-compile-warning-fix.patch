From 0948c8f462e0e35494ad90cd8615055d4ead9281 Mon Sep 17 00:00:00 2001
From: Carter Chen <carter.chen@infineon.com>
Date: Wed, 30 Nov 2022 19:42:13 -0600
Subject: [PATCH 169/208] brcmfmac: compile warning fix

Fixes: SWLINUX-3039
Signed-off-by: Carter Chen <carter.chen@infineon.com>
---
 .../net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c   | 6 +++---
 drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c    | 1 -
 drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c   | 2 +-
 drivers/net/wireless/broadcom/brcm80211/brcmfmac/vendor.c | 8 +++++---
 4 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
index 8346f357b8ec..628bd607a77d 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
@@ -6184,8 +6184,8 @@ brcmf_cfg80211_mgmt_tx(struct wiphy *wiphy, struct wireless_dev *wdev,
 		memcpy(action_frame->data, &buf[DOT11_MGMT_HDR_LEN],
 		       le16_to_cpu(action_frame->len));
 
-		brcmf_dbg(TRACE, "Action frame, cookie=%lld, len=%d, freq=%d\n",
-			  *cookie, le16_to_cpu(action_frame->len), freq);
+		brcmf_dbg(TRACE, "Action frame, cookie=%lld, len=%d, ch=%d\n",
+			  *cookie, le16_to_cpu(action_frame->len), af_params->channel);
 
 		ack = brcmf_p2p_send_action_frame(cfg, cfg_to_ndev(cfg),
 						  af_params, vif, chan);
@@ -6666,7 +6666,7 @@ brcmf_cfg80211_set_bitrate(struct wiphy *wiphy, struct net_device *ndev,
 	s32 ret = TIME_OK;
 	uint hegi;
 	u16 mcs_mask;
-	u8 band, mcs;
+	u8 band, mcs = 0;
 
 	ifp = netdev_priv(ndev);
 	ret = brcmf_fil_iovar_data_get(ifp, "he", he, sizeof(he));
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c
index fe1d8d323fa7..0739b6a44b19 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c
@@ -1265,7 +1265,6 @@ bool brcmf_p2p_scan_finding_common_channel(struct brcmf_cfg80211_info *cfg,
 {
 	struct brcmf_p2p_info *p2p = &cfg->p2p;
 	struct afx_hdl *afx_hdl = &p2p->afx_hdl;
-	struct brcmu_chan ch;
 	u8 *ie;
 	s32 err;
 	u8 p2p_dev_addr[ETH_ALEN];
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
index 1b811655cacc..95374f29e372 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
@@ -1624,7 +1624,7 @@ static u8 brcmf_sdio_rxglom(struct brcmf_sdio *bus, u8 rxseq)
 			}
 		} else {
 			brcmf_err("overflowed glomd len(%d), ignore descriptor\n",
-				  dlen);
+				  bus->glomd->len);
 			dlen = 0;
 		}
 		dptr = bus->glomd->data;
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/vendor.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/vendor.c
index 2beda60c95ad..af7ab86cf27c 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/vendor.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/vendor.c
@@ -156,15 +156,17 @@ static int brcmf_cfg80211_vndr_cmds_frameburst(struct wiphy *wiphy,
 	vif = container_of(wdev, struct brcmf_cfg80211_vif, wdev);
 	ifp = vif->ifp;
 
-	if (val == 0x0 || val == 0x1)
+	if (val == 0x0 || val == 0x1) {
 		ret = brcmf_cfg80211_vndr_cmds_int_set(ifp, val,
 						       BRCMF_C_SET_FAKEFRAG);
-	else if (val == 0xff)
+	} else if (val == 0xff) {
 		ret = brcmf_cfg80211_vndr_cmds_int_get(ifp,
 						       BRCMF_C_GET_FAKEFRAG,
 						       wiphy);
-	else
+	} else {
 		brcmf_err("Invalid Input\n");
+		ret = -EINVAL;
+	}
 
 	return ret;
 }
-- 
2.17.1

